class Solution:
    def maximalRectangle(self, matrix: List[List[str]]) -> int:
        n_rows = len(matrix)
        if n_rows == 0:
            return 0
        n_cols = len(matrix[0])        
        if n_rows + n_cols == 0:
            return 0
        
        dp = [[0]*n_cols for _ in range(n_rows)]
        for c in range(n_cols):
            dp[0][c] = 1 if matrix[0][c] == '1' else 0
        for r in range(1, n_rows):
            for c in range(n_cols):
                dp[r][c] = 1+dp[r-1][c] if matrix[r][c] == '1' else 0
        #print(dp)    # stack/cumsum to represent of max height until this item 
        
        res = 0
        for r in range(n_rows):  # in each row, find the width given the height value in dp table
            width = [0] * (r+2)
            for c in range(n_cols):
                val = dp[r][c]
                if val == 0:
                    width = [0] * (r+2)
                else:
                    for k in range(val, 0, -1):
                        width[k] += 1
                        res = max(res, width[k]*k)
                    for k in range(val+1, r+2):
                        width[k] = 0
        return res
